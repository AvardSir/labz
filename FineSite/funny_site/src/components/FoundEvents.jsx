import React, { useContext } from "react";
import { Link, useNavigate } from "react-router-dom";
import { SignUpButton } from "./SignUpButton";
import { AuthContext } from "./context/AuthContext";
import axios from "axios";
import { EventTypeTag } from "./foundEvent/EventTypeTag";
import TelegramIcon from "./TelegramIcon";
import vkIcon from '../image/vk_ico.png';
import { Footer } from "./Footer";

export const FoundEvents = ({ events, fetchEvents, setFoundEvents }) => {
  const navigate = useNavigate();
  const { loginData } = useContext(AuthContext);

  const handleShareClick = (platform, event) => {
    let url;
    if (platform === 'telegram') {
      url = `https://t.me/share/url?url=${encodeURIComponent(window.location.href)}&text=${encodeURIComponent(event.Name)}`;
    } else if (platform === 'vk') {
      url = `https://vk.com/share.php?url=${encodeURIComponent(window.location.href)}&title=${encodeURIComponent(event.Name)}`;
    }
    window.open(url, '_blank');
  };

  const handleDelete = async (eventId) => {
    try {
      // console.log(eventId)
      const response = await axios.delete(`/api/delete_event/${eventId}`);
      alert(response.data.message);
      window.location.reload();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:", error.response?.data || error);
      alert(error.response?.data?.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è");
    }
  };

  return <div className="found-events">
    <button onClick={fetchEvents} className="action-btn">
      –°–±—Ä–æ—Å–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ —Ç–∏–ø–∞–º
    </button>
    {loginData.IdRights == 2 && (
      <button
        onClick={() => navigate(`/add-event`)}
        className="action-btn add-btn"
      >
        ‚úö –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
      </button>
    )}

    <h3>–ù–∞–π–¥–µ–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</h3>

    {events.length === 0 ? (
      <p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
    ) : (
      <ul>
        {events.map((event) => (
          <li key={event.IdEvent} className="card">
            <h4 className="card-title">{event.Name}</h4>
            <div className="card-content">
              <p>{event.Description}</p>
            </div>

            <div className="card-meta">


              <EventTypeTag type={event.–¢–∏–ø–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è} EventTypeId={event.EventTypeId} setFoundEvents={setFoundEvents} />
              <span>üí∞ {event.–°—Ç–æ–∏–º–æ—Å—Ç—å} ‚ÇΩ</span>
              <span>ü™ë {event.HowManyFreeSeats} –º–µ—Å—Ç</span>
              <span>üìÖ {new Date(event.Date).toLocaleDateString()}</span>

              <span>{event.–ü—Ä–æ–≤–µ–¥–µ–Ω–æ === true ? '‚úÖ –ü—Ä–æ–≤–µ–¥–µ–Ω–æ' : 'üïí –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'}</span>

              <span
                className="share-icon telegram"
                title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram"
                onClick={() => handleShareClick("telegram", event)}
              >
                <TelegramIcon style={{ width: 16, height: 16, cursor: "pointer" }} />
              </span>

              <span
                className="share-icon vk"
                title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ VK"
                onClick={() => handleShareClick("vk", event)}
              >
                <img src={vkIcon} alt="VK" width={16} height={16} style={{ cursor: "pointer" }} />
              </span>
            </div>

            {/* –ë–ª–æ–∫ –∫–Ω–æ–ø–æ–∫ */}
            <div className="action-buttons">
              <button
                onClick={() => navigate(`/event-comments/${event.IdEvent}`)}
                className="action-btn"
              >
                üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
              </button>

              <SignUpButton
                eventId={event.IdEvent}
                className="action-btn signup-btn"
              />

              {loginData.IdRights == 2 && (
                <>
                  <button
                    onClick={() => navigate(`/edit-event/${event.IdEvent}`)}
                    className="action-btn edit-btn"
                  >
                    ‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å
                  </button>
                  <button
                    onClick={() => handleDelete(event.IdEvent)}
                    className="action-btn delete-btn"
                  >
                    üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                  </button>
                </>
              )}
            </div>
          </li>
        ))}
      </ul>
    )}
    <Footer />
  </div>
};
