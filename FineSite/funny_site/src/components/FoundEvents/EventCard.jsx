import React, { useEffect, useState } from "react";

import { EventTypeTag } from "../foundEvent/EventTypeTag";
import { ShareButtons } from "./ShareButtons";
import { ActionButtons } from "./ActionButtons";

export const EventCard = ({ event, onDelete, navigate, canEdit, setFoundEvents }) => {
  const [images, setImages] = useState([]);

  useEffect(() => {
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ /uploads/{IdEvent}
    const loadImages = async () => {
      try {
        const res = await fetch(`http://localhost:5000/api/events/${event.IdEvent}/images`);
        if (res.ok) {
          const files = await res.json();
          setImages(files); // files = ["photo1.jpg", "photo2.jpg"]
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫:", err);
      }
    };

    loadImages();
  }, [event.IdEvent]);

  return (
    <li key={event.IdEvent} className="card">
      <h4 className="card-title">{event.Name}</h4>

      {/* –ü–ª–∞—à–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ */}
      {images.length > 0 && (
        <div
          className="image-gallery"
          style={{
            display: "flex",
            gap: "10px",
            overflowX: "auto",
            marginBottom: "10px",
            justifyContent: "center", // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
          }}
        >          {images.map((fileName, idx) => (
          <img
            key={idx}
            src={`http://localhost:5000/uploads/${event.IdEvent}/${fileName}`}
            alt={`event-img-${idx}`}
            style={{ height: "100px", borderRadius: "8px", objectFit: "cover" }}
          />
        ))}
        </div>
      )}

      <div className="card-content">
        <p>{event.Description}</p>
      </div>

      <div className="card-meta">
        <EventTypeTag
          type={event.–¢–∏–ø–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è}
          EventTypeId={event.EventTypeId}
          setFoundEvents={setFoundEvents}
        />
        <span>üí∞ {event.–°—Ç–æ–∏–º–æ—Å—Ç—å} ‚ÇΩ</span>
        <span>ü™ë {event.HowManyFreeSeats} –º–µ—Å—Ç</span>
        <span>üìÖ {new Date(event.Date).toLocaleDateString()}</span>
        <span>{event.–ü—Ä–æ–≤–µ–¥–µ–Ω–æ ? "‚úÖ –ü—Ä–æ–≤–µ–¥–µ–Ω–æ" : "üïí –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ"}</span>

        <ShareButtons event={event} />
      </div>

      <ActionButtons
        event={event}
        onDelete={onDelete}
        navigate={navigate}
        canEdit={canEdit}
      />
    </li>
  );
};
