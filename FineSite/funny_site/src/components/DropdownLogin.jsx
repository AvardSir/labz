"use client"

import { useState, useContext, useEffect } from "react"
import { AuthContext } from "./context/AuthContext"
import { useNavigate, Link } from "react-router-dom"
import { useDropdown } from "./context/DropdownContext"

export const DropdownLogin = () => {
  const { isLoggedIn, login, logout, loginData } = useContext(AuthContext)
  const { isOpen, toggleDropdown } = useDropdown()
  const dropdownName = "login"

  const [credentials, setCredentials] = useState({ login: "", password: "" })
  const [error, setError] = useState("")
  const [showForgotPassword, setShowForgotPassword] = useState(false)
  const [forgotPasswordEmail, setForgotPasswordEmail] = useState("")
  const [forgotPasswordMessage, setForgotPasswordMessage] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const navigate = useNavigate()

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ isLoggedIn (–ª–æ–≥–∏–Ω/–ª–æ–≥–∞—É—Ç)
  useEffect(() => {
    toggleDropdown(null) // –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown
    setError("")
    setCredentials({ login: "", password: "" })
    setShowForgotPassword(false)
    setForgotPasswordEmail("")
    setForgotPasswordMessage("")
  }, [isLoggedIn])

  const handleToggle = () => {
    toggleDropdown(dropdownName)
    setError("")
    setShowForgotPassword(false)
    setForgotPasswordMessage("")
  }

  const handleChange = (e) => {
    const { name, value } = e.target
    setCredentials((prev) => ({ ...prev, [name]: value }))
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    setError("")

    try {
      const response = await fetch("/api/GetUserDetailsByNameAndPassword", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(credentials),
      })

      if (!response.ok) {
        if (response.status === 401) {
          setError("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
        } else {
          setError("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
        }
        return
      }

      const user = await response.json()
      login(credentials.login, credentials.password, user.IdRights)
      navigate("/")
      toggleDropdown(null) // –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", err)
      setError("–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
    }
  }

  const handleForgotPassword = async (e) => {
    e.preventDefault()
    setIsLoading(true)
    setForgotPasswordMessage("")
    setError("")

    try {
      const response = await fetch("/api/ForgotPassword", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email: forgotPasswordEmail }),
      })

      if (!response.ok) {
        if (response.status === 404) {
          setError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω")
        } else {
          setError("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
        }
        return
      }

      setForgotPasswordMessage("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à email")
      setForgotPasswordEmail("")
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è:", err)
      setError("–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
    } finally {
      setIsLoading(false)
    }
  }

  const handleLogout = () => {
    logout()
    navigate("/")
    toggleDropdown(null) // –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown
  }

  const toggleForgotPassword = () => {
    setShowForgotPassword(!showForgotPassword)
    setError("")
    setForgotPasswordMessage("")
    setForgotPasswordEmail("")
  }

  const handleLinkClick = () => {
    toggleDropdown(null) // –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
  }

  // –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userMenuItems = [
    {
      name: "–ü—Ä–æ—Ñ–∏–ª—å",
      path: "/personal_cabinet",
      icon: "üë§",
      description: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
    },
    {
      name: "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ",
      path: "/FavoriteAnecdotesList",
      icon: "‚ù§Ô∏è",
      description: "–õ—é–±–∏–º—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã",
    },
    ...(Number.parseInt(loginData?.IdRights) === 2
      ? [
          {
            name: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
            path: "/analytics",
            icon: "üìä",
            description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∞–π—Ç–∞",
          },
          {
            name: "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã",
            path: "/suggested-anecdotes-admin",
            icon: "üìù",
            description: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤",
          },
        ]
      : []),
  ]

  return (
    <div className="dropdown-login dropdown-container" style={{ textShadow: "none" }}>
      {isLoggedIn ? (
        <>
          <button onClick={handleToggle} className="dropdown-toggle nav-link">
            üë§ {loginData.login} ‚ñº
          </button>
          {isOpen(dropdownName) && (
            <div
              className="dropdown-menu login-menu"
              style={{
                position: "absolute",
                top: "100%",
                right: "0",
                background: "#ffffff",
                border: "1px solid #e0e0e0",
                borderRadius: "8px",
                boxShadow: "0 8px 24px rgba(0, 0, 0, 0.12)",
                minWidth: "280px",
                zIndex: 1000,
                overflow: "hidden",
                marginTop: "8px",
              }}
            >
              <div
                className="login-header"
                style={{
                  padding: "12px 16px 8px 16px",
                  background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                  color: "white",
                }}
              >
                <h4
                  style={{
                    margin: "0",
                    fontSize: "14px",
                    fontWeight: "600",
                    color: "white",
                  }}
                >
                  üëã –ü—Ä–∏–≤–µ—Ç, {loginData.login}!
                </h4>
              </div>

              <div className="user-menu-list">
                {userMenuItems.map((item, index) => (
                  <Link
                    key={index}
                    to={item.path}
                    onClick={handleLinkClick}
                    className="user-menu-item"
                    style={{
                      display: "flex",
                      alignItems: "center",
                      padding: "12px 16px",
                      textDecoration: "none",
                      color: "#333",
                      borderBottom: index < userMenuItems.length - 1 ? "1px solid #f0f0f0" : "none",
                      transition: "all 0.2s ease",
                      backgroundColor: "transparent",
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.backgroundColor = "#f8f9ff"
                      e.currentTarget.style.borderLeft = "4px solid #667eea"
                      e.currentTarget.style.paddingLeft = "12px"
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.backgroundColor = "transparent"
                      e.currentTarget.style.borderLeft = "none"
                      e.currentTarget.style.paddingLeft = "16px"
                    }}
                  >
                    <span
                      className="menu-icon"
                      style={{
                        fontSize: "18px",
                        marginRight: "12px",
                        minWidth: "24px",
                        textAlign: "center",
                      }}
                    >
                      {item.icon}
                    </span>
                    <div className="menu-info">
                      <div
                        className="menu-name"
                        style={{
                          fontWeight: "600",
                          fontSize: "14px",
                          marginBottom: "2px",
                          color: "#2d3748",
                        }}
                      >
                        {item.name}
                      </div>
                      <div
                        className="menu-description"
                        style={{
                          fontSize: "11px",
                          color: "#718096",
                          lineHeight: "1.3",
                        }}
                      >
                        {item.description}
                      </div>
                    </div>
                  </Link>
                ))}
              </div>

              <div
                className="logout-section"
                style={{
                  padding: "8px",
                  borderTop: "1px solid #f0f0f0",
                  background: "#fafbfc",
                }}
              >
                <button
                  onClick={handleLogout}
                  style={{
                    width: "100%",
                    padding: "10px 16px",
                    background: "linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%)",
                    color: "white",
                    border: "none",
                    borderRadius: "6px",
                    fontSize: "14px",
                    fontWeight: "600",
                    cursor: "pointer",
                    transition: "all 0.2s ease",
                  }}
                  onMouseEnter={(e) => {
                    e.target.style.transform = "translateY(-1px)"
                    e.target.style.boxShadow = "0 4px 12px rgba(255, 107, 107, 0.3)"
                  }}
                  onMouseLeave={(e) => {
                    e.target.style.transform = "translateY(0)"
                    e.target.style.boxShadow = "none"
                  }}
                >
                  üö™ –í—ã–π—Ç–∏
                </button>
              </div>
            </div>
          )}
        </>
      ) : (
        <>
          <button onClick={handleToggle} className="dropdown-toggle nav-link">
            üîê –í–æ–π—Ç–∏ ‚ñº
          </button>
          {isOpen(dropdownName) && (
            <div
              className="dropdown-menu login-form-menu"
              style={{
                position: "absolute",
                top: "100%",
                right: "0",
                background: "#ffffff",
                border: "1px solid #e0e0e0",
                borderRadius: "8px",
                boxShadow: "0 8px 24px rgba(0, 0, 0, 0.12)",
                minWidth: "300px",
                zIndex: 1000,
                overflow: "hidden",
                marginTop: "8px",
              }}
            >
              <div
                className="login-form-header"
                style={{
                  padding: "16px",
                  background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                  color: "white",
                  textAlign: "center",
                }}
              >
                <h4
                  style={{
                    margin: "0",
                    fontSize: "16px",
                    fontWeight: "600",
                    color: "white",
                  }}
                >
                  {showForgotPassword ? "üîë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è" : "üîê –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç"}
                </h4>
              </div>

              <div style={{ padding: "20px" }}>
                {!showForgotPassword ? (
                  <>
                    <form onSubmit={handleSubmit} style={{ marginBottom: "16px" }}>
                      <div style={{ marginBottom: "12px" }}>
                        <input
                          type="text"
                          name="login"
                          placeholder="–õ–æ–≥–∏–Ω"
                          value={credentials.login}
                          onChange={handleChange}
                          required
                          style={{
                            width: "100%",
                            padding: "12px",
                            border: "2px solid #e2e8f0",
                            borderRadius: "6px",
                            fontSize: "14px",
                            transition: "border-color 0.2s ease",
                            outline: "none",
                          }}
                          onFocus={(e) => {
                            e.target.style.borderColor = "#667eea"
                          }}
                          onBlur={(e) => {
                            e.target.style.borderColor = "#e2e8f0"
                          }}
                        />
                      </div>
                      <div style={{ marginBottom: "16px" }}>
                        <input
                          type="password"
                          name="password"
                          placeholder="–ü–∞—Ä–æ–ª—å"
                          value={credentials.password}
                          onChange={handleChange}
                          required
                          style={{
                            width: "100%",
                            padding: "12px",
                            border: "2px solid #e2e8f0",
                            borderRadius: "6px",
                            fontSize: "14px",
                            transition: "border-color 0.2s ease",
                            outline: "none",
                          }}
                          onFocus={(e) => {
                            e.target.style.borderColor = "#667eea"
                          }}
                          onBlur={(e) => {
                            e.target.style.borderColor = "#e2e8f0"
                          }}
                        />
                      </div>
                      <button
                        type="submit"
                        style={{
                          width: "100%",
                          padding: "12px",
                          background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                          color: "white",
                          border: "none",
                          borderRadius: "6px",
                          fontSize: "14px",
                          fontWeight: "600",
                          cursor: "pointer",
                          transition: "all 0.2s ease",
                        }}
                        onMouseEnter={(e) => {
                          e.target.style.transform = "translateY(-1px)"
                          e.target.style.boxShadow = "0 4px 12px rgba(102, 126, 234, 0.3)"
                        }}
                        onMouseLeave={(e) => {
                          e.target.style.transform = "translateY(0)"
                          e.target.style.boxShadow = "none"
                        }}
                      >
                        –í–æ–π—Ç–∏
                      </button>
                    </form>

                    <div
                      style={{
                        display: "flex",
                        flexDirection: "column",
                        gap: "8px",
                        paddingTop: "12px",
                        borderTop: "1px solid #f0f0f0",
                      }}
                    >
                      <Link
                        to="/registration"
                        onClick={handleLinkClick}
                        style={{
                          color: "#667eea",
                          textDecoration: "none",
                          fontSize: "13px",
                          textAlign: "center",
                          padding: "4px",
                        }}
                        onMouseEnter={(e) => {
                          e.target.style.textDecoration = "underline"
                        }}
                        onMouseLeave={(e) => {
                          e.target.style.textDecoration = "none"
                        }}
                      >
                        üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                      </Link>
                      <button
                        type="button"
                        onClick={toggleForgotPassword}
                        style={{
                          background: "none",
                          border: "none",
                          color: "#718096",
                          fontSize: "12px",
                          cursor: "pointer",
                          textAlign: "center",
                          padding: "4px",
                        }}
                        onMouseEnter={(e) => {
                          e.target.style.color = "#667eea"
                          e.target.style.textDecoration = "underline"
                        }}
                        onMouseLeave={(e) => {
                          e.target.style.color = "#718096"
                          e.target.style.textDecoration = "none"
                        }}
                      >
                        üîë –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                      </button>
                    </div>
                  </>
                ) : (
                  <>
                    <form onSubmit={handleForgotPassword} style={{ marginBottom: "16px" }}>
                      <div style={{ marginBottom: "16px" }}>
                        <input
                          type="email"
                          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                          value={forgotPasswordEmail}
                          onChange={(e) => setForgotPasswordEmail(e.target.value)}
                          required
                          style={{
                            width: "100%",
                            padding: "12px",
                            border: "2px solid #e2e8f0",
                            borderRadius: "6px",
                            fontSize: "14px",
                            transition: "border-color 0.2s ease",
                            outline: "none",
                          }}
                          onFocus={(e) => {
                            e.target.style.borderColor = "#667eea"
                          }}
                          onBlur={(e) => {
                            e.target.style.borderColor = "#e2e8f0"
                          }}
                        />
                      </div>
                      <button
                        type="submit"
                        disabled={isLoading}
                        style={{
                          width: "100%",
                          padding: "12px",
                          background: isLoading ? "#cbd5e0" : "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                          color: "white",
                          border: "none",
                          borderRadius: "6px",
                          fontSize: "14px",
                          fontWeight: "600",
                          cursor: isLoading ? "not-allowed" : "pointer",
                          transition: "all 0.2s ease",
                        }}
                      >
                        {isLoading ? "‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞..." : "üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
                      </button>
                    </form>

                    <button
                      type="button"
                      onClick={toggleForgotPassword}
                      style={{
                        background: "none",
                        border: "none",
                        color: "#718096",
                        fontSize: "12px",
                        cursor: "pointer",
                        width: "100%",
                        textAlign: "center",
                        padding: "8px",
                      }}
                      onMouseEnter={(e) => {
                        e.target.style.color = "#667eea"
                        e.target.style.textDecoration = "underline"
                      }}
                      onMouseLeave={(e) => {
                        e.target.style.color = "#718096"
                        e.target.style.textDecoration = "none"
                      }}
                    >
                      ‚Üê –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É
                    </button>
                  </>
                )}

                {error && (
                  <div
                    style={{
                      marginTop: "12px",
                      padding: "8px 12px",
                      background: "#fed7d7",
                      border: "1px solid #feb2b2",
                      borderRadius: "4px",
                      color: "#c53030",
                      fontSize: "12px",
                      textAlign: "center",
                    }}
                  >
                    ‚ùå {error}
                  </div>
                )}

                {forgotPasswordMessage && (
                  <div
                    style={{
                      marginTop: "12px",
                      padding: "8px 12px",
                      background: "#c6f6d5",
                      border: "1px solid #9ae6b4",
                      borderRadius: "4px",
                      color: "#2f855a",
                      fontSize: "12px",
                      textAlign: "center",
                    }}
                  >
                    ‚úÖ {forgotPasswordMessage}
                  </div>
                )}
              </div>
            </div>
          )}
        </>
      )}
    </div>
  )
}
